{"remainingRequest":"C:\\Users\\shop\\Documents\\GitHub\\token-generator\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!C:\\Users\\shop\\Documents\\GitHub\\token-generator\\node_modules\\@vuepress\\core\\.temp\\internal\\siteData.js","dependencies":[{"path":"C:\\Users\\shop\\Documents\\GitHub\\token-generator\\node_modules\\@vuepress\\core\\.temp\\internal\\siteData.js","mtime":1638045838406},{"path":"C:\\Users\\shop\\Documents\\GitHub\\token-generator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\shop\\Documents\\GitHub\\token-generator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}